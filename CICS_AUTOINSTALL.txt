

https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.4.0/security/cics/dfht50v.html

Using an MVS system console as a CICS terminal
----------------------------------------------

Users can sign on using CESL or CESN, or you might prefer to use preset security (the normal preset security for CICS terminals, or automatic preset security for consoles)

When the TSO user uses the CONSOLE command, that user's user ID, by default, becomes a console name. However, you can change the console name to something else by using the CONSNAME(name) option on the TSO CONSOLE command. This console name can then be used as a CICS terminal if there is a corresponding TERMINAL definition with the CONSNAME option in CICS (or if you autoinstall a terminal definition)


You do not have to define a relationship in a CICS definition between a console name and a user. A relationship might change frequently or become invalid.

You can define one autoinstall model that covers most of your console definitions and gives each user the correct level of preset security.

To define automatic preset security, specify USERID(*EVERY) to ensure that the correct user ID is signed on for every command, or USERID(*FIRST) to sign on the console by using the user ID that first issues an MVS MODIFY command to CICS, and retain this for subsequent commands.

Choose USERID(*FIRST) if use of a console is restricted to one or more users who have similar security characteristics to CICS using RACF, and you don't use the user ID as an identifier in applications.

----------------------------------------------------------------------------------
Use USERID(*EVERY) if you need to ensure that each input request is tested to be sure that the console user has the correct security level. You should be aware that checking the user ID imposes an overhead on MODIFY, and changing the preset user ID imposes another overhead, which is equivalent to the console user signing on using CESL or CESN.
----------------------------------------------------------------------------------



https://www.ibm.com/support/knowledgecenter/SSGMCP_5.2.0/com.ibm.cics.ts.resourcedefinition.doc/topics/dfha4kc.html

Autoinstalling MVS consoles
---------------------------


AICONS=AUTO (usa o programa default da IBM para o autoinstall de console)
	YES(usa o programa do cliente)


AUTO
Specifies that console autoinstall is active but CICS is not to call the autoinstall control program when an undefined console issues an MVS MODIFY command to CICS. CICS is to autoinstall undefined consoles automatically without any input from the autoinstall control program. The 4-character termid required for the console's TCT entry is generated by CICS, beginning with a ¬ (logical not) symbol.


AIEXIT={DFHZATDX|DFHZATDY|name}




https://www.ibm.com/support/knowledgecenter/SSGMCP_5.2.0/com.ibm.cics.ts.resourcedefinition.doc/topics/dfha4kd.html

Ativando autoinstall de consoles
--------------------------------

The supplied group DFHTERMC contains an autoinstall model definition for a console, but it is not included in DFHLIST.

Procedimento:

0 - Verificar qual o programa de autoinstall de terminais e consoles está sendo usado

	IBM® supplies two assembler versions of an autoinstall control program (DFHZATDX and DFHZATDY in SDFHLOAD) 
	AIEXIT={DFHZATDX|DFHZATDY|name}

	INQUIRE AUTOINSTALL > PROGRAM(pgrmid)
				specifies the name of the user program that is controlling the autoinstall process. The default is the CICS-supplied program DFHZATDX.


1 - Define a console terminal definition with the following attributes:
	Specify AUTINSTMODEL(YES), or AUTINSTMODEL(ONLY)  **
	
	**This is what happens when you install a TERMINAL definition, either at system initialization or using INSTALL:
		AUTINSTMODEL(NO)
			A TCT entry is created for the terminal.
		AUTINSTMODEL(YES)
			A TCT entry is created for the terminal, and the model definition is stored for later use by the autoinstall process.
		AUTINSTMODEL(ONLY)
			The model definition is stored for later use by the autoinstall process.

		If you install two model TERMINAL definitions with the same AUTINSTNAME, the second one replaces the first.


	Specify the CONSNAME(name)	<<<<*** será ignorado o valor do CONSNAME
	*Reference a TYPETERM that specifies DEVICE(CONSOLE)

	DFHCONS g(DFHTYPE)
			MVS™ console:
			TYPETERM(DFHCONS)  GROUP(DFHTYPE)
			DEVICE(CONSOLE)
			PAGESIZE(1,124)    AUTOPAGE(NO)
			BRACKET(YES)       BUILDCHAIN(YES)     ROUTEDMSGS(NONE)
			UCTRAN(YES)

	*Create your TYPETERM and model TERMINAL definitions.
	CICS supplies some TERMINAL and TYPETERM definitions; these are listed in TYPETERM definitions in group DFHTYPE and Model TERMINAL definitions in group DFHTERM. You can use these definitions if they are suitable; if not, create your own using CEDA or DFHCSDUP.
	Define an autoinstall model for each different kind of terminal to be autoinstalled. Try to keep the number of definitions to a minimum, so that the autoinstall control program can be as simple as possible.
	Redefine DFHZCQ. For every region using autoinstall, redefine DFHZCQ to be RESIDENT(YES). (DFHZCQ is in the CICS-supplied group DFHSPI). See Defining programs as resident, nonresident, or transient for guidance on why you should consider making programs resident.
	

	AUTINSTNAME(You specify this name only if AUTINSTMODEL is YES or ONLY.)
	You can default to the terminal name followed by four blanks,

	adicionalmente usar o parâmetro USERID(*EVERY)

	CONSNAME(INTERNAL) or CONSNAME(INSTREAM) is the equivalent of CONSOLE(00)
	CONSNAME(INTERNAL) usar para poder emitir comandos ao CICS via JCL

You can use the model console definition defined in the group DFHTERMC, which is added to your CSD by the INITIALIZE and UPGRADE commands.

	***When a model terminal definition is used by the console autoinstall function, CICS® ignores the console name specified on the model definition.

2 - Install the model console definition. You can either add its group(DFHTERMC) to a group list and perform a cold start or install the resource by using CICS Explorer®.



3 - para usar programa próprio do cliente, set AICONS=YES
	(não é o caso)

4 - set AICONS=AUTO (usar o programa default do CICS)

	With the AUTO option, CICS allocates the TERMID automatically.
	Será usado o nome ¬xxx  beginning with a ¬ (logical not) symbol


	Outros parâmetros relacionados com AUTOINSTALL
	Redefine DFHZCQ. For every region using autoinstall, redefine DFHZCQ to be RESIDENT(YES). (DFHZCQ is in the CICS-supplied group DFHSPI). See Defining programs as resident, nonresident, or transient for guidance on why you should consider making programs resident.

	AIEXIT={DFHZATDX|DFHZATDY|name}
	specifies the name of the autoinstall program to be used. It defaults to DFHZATDX, the name of the IBM®-supplied autoinstall control program.

	AIQMAX - numero máximo de terminais requests que podem enfileirar para autoinstall
	para cada request, uma transação CATA é ativada(poderia ser usada uma TRANCLASS para limitar também)

	AILDELAY - hhmmss - intervalo em que o terminal autoinstalado é apagado após o logoff ocorrido.

	AIRDELAY - hhmmss - intervalo em que o terminal autoinstalado é apagado após um emergencial restart - default 700(7 minutos)

	3 opções relacionadas ao autoinstall 
	INQUIRE AUTOINSTALL
		CUR(value)
			specifies the number of autoinstall logon requests that are currently being processed.
		MAXREQS(value)
			specifies the largest number of autoinstall requests that are allowed to queue at one time, in the range 0-999.
			You can prevent more terminals from logging on through autoinstall by setting this value to 0. This allows autoinstalled entries for terminals currently logged on to be deleted by the autoinstall program when they log off.
		PROGRAM(pgrmid)
			specifies the name of the user program that is controlling the autoinstall process. The default is the CICS-supplied program DFHZATDX.



5 - Ensure that the required autoinstall programs and transactions are installed. These resources are your autoinstall control program, the transactions CATA and CATD, and the programs DFHZATD and DFHZATA. You must have the following resources installed:

	PROGRAM resource for your autoinstall control program (não é o caso)
	TRANSACTION resources for CATA and CATD
	PROGRAM resources for DFHZATD and DFHZATA. 

Autoinstall program(DFHZATDX or DFHZATDY)

The supplied autoinstall control program, DFHZATDX or DFHZATDY, accepts a request from any console, provided an autoinstall model for a console is found in the AMT. Use the model definition supplied in group DFHTERMC, or alternatively create your own autoinstall console models (see The autoinstall control program for MVS consoles)

5 - fim

mensagens: para a TD CADL

you will find that CICS writes install and delete messages to the transient data destination, CADL, each time CICS installs and deletes a TCT entry.

6 - If there are no autoinstall models installed for consoles, CICS does not call the autoinstall control program, and fails the autoinstall request.




JCL
//IEFBR14 JOB (accounting information),CLASS=A,MSGCLASS=A,MSGLEVEL=1,…,…
//*
//*  Sample JOB to submit CICS commands using CONSNAME(INTERNAL)
//*
//IEFBR     EXEC PGM=IEFBR14
// F CICSRUN,'CEMT INQ TER'
// F CICSRUN,'CEMT INQ TAS'
// F CICSRUN,'CEMT SET TER(L77C) ACQ'











